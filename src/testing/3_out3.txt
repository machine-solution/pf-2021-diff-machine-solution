----------------------------SUCCESS------------------------------------------------------------------------------------
@ d 23 @
>     public Bot_Bob() {}
@ a 23 @
>     public Bot_Bob() { }
@ d 28 @
>     //NOT RELOAD
@ a 28 @
>     // NOT RELOAD //
@ d 31 @
>     //RELOAD
@ a 31 @
>     // RELOAD  //
@ d 36 @
>     //  BFS
@ a 36 @
>     //    BFS    //
@ a 43-44 @
>     //    Jam    //
>     protected int dspy_x, dspy_y, is_spy;
@ d 165 @
>     protected virtual void Reload() {
@ a 167 @
>     protected void Reload() {
@ a 177 @
>         dspy_x = dspy_y = is_spy = 0;
@ d 200-201 @
>     protected virtual int Can(int a, int b, int k) => my_map.Can(a, b, k);
>     protected virtual bool Have(int form, int a, int b) {
@ a 203-204 @
>     protected int Can(int a, int b, int k) => my_map.Can(a, b, k);
>     protected bool Have(int form, int a, int b) {
@ d 207-209 @
>     protected virtual bool Have(int form) => Have(form, my_map.x, my_map.y);
>     protected virtual bool HaveArs() => knifes != Check.knifes(my_id) || bullets != Check.bullets(my_id) || armors != Check.armors(my_id) || crackers != Check.crackers(my_id);
>     protected virtual void BFS() {
@ a 210-211 @
>     protected bool Have(int form) => Have(form, my_map.x, my_map.y);
>     protected void BFS() {
@ d 245 @
>     protected virtual void Path(int a, int b) {
@ a 247 @
>     protected void Path(int a, int b) {
@ d 253 @
>     protected virtual void GoToV() {
@ a 255 @
>     protected void GoToV() {
@ d 272 @
>     protected virtual void UpdateAns() {
@ a 274 @
>     protected void UpdateAns() {
@ d 290 @
>     protected virtual void UpdateChoice() {
@ a 292 @
>     protected void UpdateChoice() {
@ d 311-313 @
>     protected virtual int Max(int a, int b) => (a > b) ? a : b;
>     protected virtual int Min(int a, int b) => (a < b) ? a : b;
>     protected virtual int SumOut() {
@ a 313-315 @
>     protected int Max(int a, int b) => (a > b) ? a : b;
>     protected int Min(int a, int b) => (a < b) ? a : b;
>     protected int SumOut() {
@ d 330-331 @
>     protected virtual string Random(int form) => random(form, my_map.x, my_map.y);
>     protected virtual int GameAns(string s) {
@ a 332-333 @
>     protected string Random(int form) => random(form, my_map.x, my_map.y);
>     protected int GameAns(string s) {
@ d 336 @
>     protected virtual Map High(Map A, Map B) {
@ a 338 @
>     protected Map High(Map A, Map B) {
@ d 339 @
>     protected virtual void Add(Map A, Map B, int a, int b) {
@ a 341 @
>     protected void Add(Map A, Map B, int a, int b) {
@ d 368 @
>     protected virtual Map Merge(Map A, Map B) {
@ a 370 @
>     protected Map Merge(Map A, Map B) {
@ d 459-461 @
>     protected virtual bool ConflictRes(int res, int side) => Can(my_map.x, my_map.y, side) != res && Can(my_map.x, my_map.y, side) != UNKNOWN;
>     protected virtual bool ConflictMove() => my_map.maxx - my_map.minx >= Size || my_map.maxy - my_map.miny >= Size;
>     protected virtual bool ConflictWall() {
@ a 461-463 @
>     protected bool ConflictRes(int res, int side) => Can(my_map.x, my_map.y, side) != res && Can(my_map.x, my_map.y, side) != UNKNOWN;
>     protected bool ConflictMove() => my_map.maxx - my_map.minx >= Size || my_map.maxy - my_map.miny >= Size;
>     protected bool ConflictWall() {
@ d 476 @
>     protected virtual void UpdateStats() {
@ a 478 @
>     protected void UpdateStats() {
@ d 484 @
>     protected virtual void GetInfoB() {
@ a 486 @
>     protected void GetInfoB() {
@ d 491 @
>     protected virtual bool SmbLosed() {
@ a 493 @
>     protected bool SmbLosed() {
@ d 495 @
>     protected virtual void UpdateCan_and_xy(int game, int k) //only for "step"
@ a 497 @
>     protected void UpdateCan_and_xy(int game, int k) //only for "step"
@ d 756 @
>     protected override void Reload() {
@ a 758 @
>     protected new void Reload() {
@ d 785 @
>     protected override int Can(int a, int b, int side) {
@ a 787 @
>     protected new int Can(int a, int b, int side) {
@ d 795 @
>     protected override void BFS() {
@ a 797 @
>     protected new void BFS() {
@ d 824 @
>     protected override void Path(int x, int y) {
@ a 826 @
>     protected new void Path(int x, int y) {
@ d 830 @
>     protected override void GoToV() {
@ a 832 @
>     protected new void GoToV() {
@ d 842 @
>     protected override void UpdateAns() {
@ a 844 @
>     protected new void UpdateAns() {
@ d 857-858 @
>     protected override string Random(int form) => random(form, x, y);
>     protected override void UpdateChoice() {
@ a 859-860 @
>     protected new string Random(int form) => random(form, x, y);
>     protected new void UpdateChoice() {
@ d 886 @
>     protected override int GameAns(string s) {
@ a 888 @
>     protected new int GameAns(string s) {
@ d 909 @
>     protected override void UpdateCan_and_xy(int game, int k) {
@ a 911 @
>     protected new void UpdateCan_and_xy(int game, int k) {
@ d 973 @
>     protected override bool SmbLosed() {
@ a 975 @
>     protected new bool SmbLosed() {
@ d 1015 @
>     protected int dspy_x, dspy_y, is_spy;