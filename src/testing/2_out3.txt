----------------------------SUCCESS------------------------------------------------------------------------------------
@ d 1 @
> #!/usr/bin/env python3
@ a 1 @
> #!usrbinenv python3
@ d 4 @
> # Copyright 2020 Oskar Sharipov <oskarsh[at]riseup[dot]net>
@ a 4 @
> # Copyright 2020 Oskar Sharipov oskarsh[at]riseup[dot]net
@ d 6 @
> # Licensed under the Apache License, Version 2.0 (the "License");
@ a 6 @
> # Licensed under the Apache License, Version 2.0 (the License);
@ d 10 @
> #     http://www.apache.org/licenses/LICENSE-2.0
@ a 10 @
> #     httpwww.apache.orglicensesLICENSE-2.0
@ d 13 @
> # distributed under the License is distributed on an "AS IS" BASIS,
@ a 13 @
> # distributed under the License is distributed on an AS IS BASIS,
@ d 18-24 @
> """hundo.py - search enrollees in admlist.ru database
> Usage:
>   python hundo.py [--quiet] [--json | --raw]
>   python hundo.py [--quiet] [--json | --raw] < file_with_names
>   python hundo.py --fast [--quiet] [--json | --raw] < file_with_names
>   python hundo.py --fast [--quiet] [--json | --raw]
> Arguments:
@ a 18-24 @
> hundo.py - search enrollees in admlist.ru database
> Usage
>   python hundo.py [--quiet] [--json  --raw]
>   python hundo.py [--quiet] [--json  --raw]  file_with_names
>   python hundo.py --fast [--quiet] [--json  --raw]  file_with_names
>   python hundo.py --fast [--quiet] [--json  --raw]
> Arguments
@ d 28 @
>   --raw     Use plain text for output."""
@ a 28 @
>   --raw     Use plain text for output.
@ d 46 @
> SITE = 'http://admlist.ru/'
@ a 46 @
> SITE = 'httpadmlist.ru'
@ d 48 @
> WORKERS = min(32, cpu_count() * 4)
@ a 48 @
> WORKERS = min(32, cpu_count()  4)
@ d 64 @
>     bar_format='{l_bar}{bar}| {n_fmt}/{total_fmt} [{elapsed}]',
@ a 64 @
>     bar_format='{l_bar}{bar} {n_fmt}{total_fmt} [{elapsed}]',
@ d 68-70 @
> def log(*args, **kwargs):
>     if is_verbose:
>         print(*args, **kwargs, file=stderr)
@ a 68-70 @
> def log(args, kwargs)
>     if is_verbose
>         print(args, kwargs, file=stderr)
@ d 73 @
> def future_results(futures, as_json=False):
@ a 73 @
> def future_results(futures, as_json=False)
@ d 76 @
>     while not_done:
@ a 76 @
>     while not_done
@ d 78-79 @
>         for future in done:
>             try:
@ a 78-79 @
>         for future in done
>             try
@ d 81 @
>                 if as_json:
@ a 81 @
>                 if as_json
@ d 83 @
>                 else:
@ a 83 @
>                 else
@ d 88 @
>             except Exception as e:
@ a 88 @
>             except Exception as e
@ d 92-93 @
>         if len(done) == 0:
>             for n in range(len(not_done)):
@ a 92-93 @
>         if len(done) == 0
>             for n in range(len(not_done))
@ d 98 @
> def get_page(url):
@ a 98 @
> def get_page(url)
@ d 105 @
> def name_list():
@ a 105 @
> def name_list()
@ d 107-108 @
>     for line in map(lambda x: x.strip(), stdin.readlines()):
>         if not line.startswith('#') and line:
@ a 107-108 @
>     for line in map(lambda x x.strip(), stdin.readlines())
>         if not line.startswith('#') and line
@ d 113-114 @
> UNIV_LIST_LINK_RE = re.compile(r'href=[\w\d-]*/index.html>')
> def univ_list():
@ a 113-114 @
> UNIV_LIST_LINK_RE = re.compile(r'href=[wd-]index.html')
> def univ_list()
@ d 117 @
>     for s in re.findall(UNIV_LIST_LINK_RE, main_page):
@ a 117 @
>     for s in re.findall(UNIV_LIST_LINK_RE, main_page)
@ d 119 @
>                 s[len('href='): -len('index.html>')]
@ a 119 @
>                 s[len('href=') -len('index.html')]
@ d 124-126 @
> SPEC_LIST_RE = re.compile(r'=[0-9a-f]*.html')
> SPEC_LIST_LINK_RE = re.compile(r'href=[0-9a-f]*.html>.*?')
> def spec_list(univ_page):
@ a 124-126 @
> SPEC_LIST_RE = re.compile(r'=[0-9a-f].html')
> SPEC_LIST_LINK_RE = re.compile(r'href=[0-9a-f].html.')
> def spec_list(univ_page)
@ d 128-129 @
>     for s in re.findall(SPEC_LIST_LINK_RE, univ_page):
>         result.append(re.findall(SPEC_LIST_RE, s)[0][1:])
@ a 128-129 @
>     for s in re.findall(SPEC_LIST_LINK_RE, univ_page)
>         result.append(re.findall(SPEC_LIST_RE, s)[0][1])
@ d 133-136 @
> SPEC_NAME_RE = re.compile(r'<h1><center><a href=index.html>.*?</center></h1>')
> def spec_name(spec_page):
>     result = re.search(SPEC_NAME_RE, spec_page).group(0)[31:-14]
>     return result.replace('</a>', '')
@ a 133-136 @
> SPEC_NAME_RE = re.compile(r'h1centera href=index.html.centerh1')
> def spec_name(spec_page)
>     result = re.search(SPEC_NAME_RE, spec_page).group(0)[31-14]
>     return result.replace('a', '')
@ d 139 @
> def kwtree(asked_people):
@ a 139 @
> def kwtree(asked_people)
@ d 141 @
>     for name in asked_people:
@ a 141 @
>     for name in asked_people
@ d 147 @
> def future_univ():
@ a 147 @
> def future_univ()
@ d 149 @
>     for u in univ_list():
@ a 149 @
>     for u in univ_list()
@ d 156 @
> def future_spec(future_jobs_univ):
@ a 156 @
> def future_spec(future_jobs_univ)
@ d 160-162 @
>     progress_bar = tqdm(**progress_bar_config, total=len(future_jobs_univ))
>     for univ_page, url in future_results(future_jobs_univ):
>         if univ_page is None:
@ a 160-162 @
>     progress_bar = tqdm(progress_bar_config, total=len(future_jobs_univ))
>     for univ_page, url in future_results(future_jobs_univ)
>         if univ_page is None
@ d 166 @
>         for spec_url in spec_list(univ_page):
@ a 166 @
>         for spec_url in spec_list(univ_page)
@ d 168 @
>                 session.get(url[: -len('index.html')] + spec_url)
@ a 168 @
>                 session.get(url[ -len('index.html')] + spec_url)
@ d 175-178 @
> def line_content(line):
>     prop = line.split('</td><td>')
>     for i in range(len(prop)):
>         prop[i] = prop[i][3:-4] if prop[i][:2] == '<b' else prop[i]
@ a 175-178 @
> def line_content(line)
>     prop = line.split('tdtd')
>     for i in range(len(prop))
>         prop[i] = prop[i][3-4] if prop[i][2] == 'b' else prop[i]
@ d 185 @
> def line(pos, page):
@ a 185 @
> def line(pos, page)
@ d 187 @
>     while st >= 0 and page[st:st+4] != '<tr>':
@ a 187 @
>     while st = 0 and page[stst+4] != 'tr'
@ d 189 @
>     while fin < len(page) and page[fin-5:fin] != '</tr>':
@ a 189 @
>     while fin  len(page) and page[fin-5fin] != 'tr'
@ d 191 @
>     if st < 0 or fin >= len(page):
@ a 191 @
>     if st  0 or fin = len(page)
@ d 193 @
>     return page[st:fin]
@ a 193 @
>     return page[stfin]
@ d 196 @
> def seek_people(asked_people):
@ a 196 @
> def seek_people(asked_people)
@ d 206-208 @
>     progress_bar = tqdm(**progress_bar_config, total=len(future_jobs_spec))
>     for i, (spec_page, _) in enumerate(future_results(future_jobs_spec)):
>         if spec_page is None:
@ a 206-208 @
>     progress_bar = tqdm(progress_bar_config, total=len(future_jobs_spec))
>     for i, (spec_page, _) in enumerate(future_results(future_jobs_spec))
>         if spec_page is None
@ d 213 @
>         for end_index, _ in found:
@ a 213 @
>         for end_index, _ in found
@ d 217-219 @
>                     'spec': spec_name(spec_page),
>                     'type': comp_type,
>                     'agreement': agreement
@ a 217-219 @
>                     'spec' spec_name(spec_page),
>                     'type' comp_type,
>                     'agreement' agreement
@ d 227-229 @
> def parse_from_json(s):
>     # that's as an example:
>     # ИТМО, Программная инженерия (09.03.04), ОК [Б], №: 123, №*: 456, №**: 789
@ a 227-229 @
> def parse_from_json(s)
>     # that's as an example
>     # ИТМО, Программная инженерия (09.03.04), ОК [Б], № 123, № 456, № 789
@ d 231-232 @
>     if '<b>' in s:
>         s = s[3: -4]
@ a 231-232 @
>     if 'b' in s
>         s = s[3 -4]
@ d 234-237 @
>     spec = s[:s.index('[')]
>     spec = spec[:spec.rindex(',')]
>     comp_type = s[len(spec) + 2:]
>     comp_type = comp_type[:comp_type.index(',')]
@ a 234-237 @
>     spec = s[s.index('[')]
>     spec = spec[spec.rindex(',')]
>     comp_type = s[len(spec) + 2]
>     comp_type = comp_type[comp_type.index(',')]
@ d 241-243 @
> def search_by_hashes(asked_people):
>     class hasher:
>         def __init__(self):
@ a 241-243 @
> def search_by_hashes(asked_people)
>     class hasher
>         def __init__(self)
@ d 246-247 @
>         def __call__(self, s):
>             if s not in self.cache:
@ a 246-247 @
>         def __call__(self, s)
>             if s not in self.cache
@ a 254-255 @
>     for name in asked_people
>         hashes_by_its_starts[h(name)[ 2]].append(
@ d 254-259 @
>     for name in asked_people:
>         # if it doesn't match Фамилия Имя Отчество
>         if name.count(' ') != 2:
>             log('ignore {:s}: not ФИО'.format(name))
>             continue
>         hashes_by_its_starts[h(name)[: 2]].append(
@ a 258 @
>     json_url = SITE + 'fio{}.json'
@ a 260 @
>     for short_hash in hashes_by_its_starts
@ d 262 @
>     json_url = SITE + 'fio/{}.json'
@ d 264 @
>     for short_hash in hashes_by_its_starts:
@ a 264-265 @
>     for json, url in future_results(futures, as_json=True)
>         if json is None
@ a 267-269 @
>         short_hash = url[ url.rindex('.json')][-2]
>         for h, name in hashes_by_its_starts[short_hash]
>             if h not in json
@ d 268-269 @
>     for json, url in future_results(futures, as_json=True):
>         if json is None:
@ a 271 @
>             for _, string in json[h]
@ d 271-273 @
>         short_hash = url[: url.rindex('.json')][-2:]
>         for h, name in hashes_by_its_starts[short_hash]:
>             if h not in json:
@ d 275 @
>             for _, string in json[h]:
@ a 275-277 @
>                         'spec' spec,
>                         'type' comp_type,
>                         'agreement' agreement
@ d 279-281 @
>                         'spec': spec,
>                         'type': comp_type,
>                         'agreement': agreement
@ a 283-284 @
> if __name__ == '__main__'
>     if '--help' in argv
@ d 287-288 @
> if __name__ == '__main__':
>     if '--help' in argv:
@ a 289-290 @
>     try
>         if '--fast' in argv
@ a 292 @
>         else
@ d 293-294 @
>     try:
>         if '--fast' in argv:
@ a 294 @
>     except KeyboardInterrupt
@ d 296 @
>         else:
@ a 296 @
>         try
@ d 298 @
>     except KeyboardInterrupt:
@ d 300 @
>         try:
@ a 300 @
>         except KeyboardInterrupt
@ d 304 @
>         except KeyboardInterrupt:
@ a 304-308 @
>     stat = 'completed in {.2f} secondsn' +
>         'on web-pages {.2f} seconds ({.2f} mB)n' +
>         'total found people {d} ({.1f}% of asked)n' +
>         'failed university pages {d}n' +
>         'failed direction pages {d}n'
@ d 308-312 @
>     stat = 'completed in {:.2f} seconds\n' +\
>         'on web-pages: {:.2f} seconds ({:.2f} mB)\n' +\
>         'total found people: {:d} ({:.1f}% of asked)\n' +\
>         'failed university pages: {:d}\n' +\
>         'failed direction pages: {:d}\n'
@ a 312 @
>             elapsed_time.total_seconds(), traffic_length  1e-6,
@ a 314 @
>             len(found_people)  len(asked_people)  100,
@ d 316 @
>             elapsed_time.total_seconds(), traffic_length * 1e-6,
@ d 318 @
>             len(found_people) / len(asked_people) * 100,
@ a 319 @
>     if '--json' in argv
@ a 321-322 @
>     elif '--raw' in argv
>         for name, directions in sorted(found_people.items())
@ d 323 @
>     if '--json' in argv:
@ a 324 @
>             for direction in directions
@ d 325-326 @
>     elif '--raw' in argv:
>         for name, directions in sorted(found_people.items()):
@ d 328 @
>             for direction in directions:
@ a 331 @
>     else
@ a 333 @
>         for name, directions in sorted(found_people.items())
@ d 335 @
>     else:
@ d 337 @
>         for name, directions in sorted(found_people.items()):
@ a 337-338 @
>             table.add_column('Согласие', justify='center', style='cyan')
>             for direction in directions
@ d 341-342 @
>             table.add_column('Согласие?', justify='center', style='cyan')
>             for direction in directions:
@ a 342 @
>                     '[green]+[green]' if direction['agreement'] else '-'
@ d 346 @
>                     '[green]+[/green]' if direction['agreement'] else '-'